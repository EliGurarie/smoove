% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findSingleBreakPoint.R
\name{findSingleBreakPoint}
\alias{findSingleBreakPoint}
\title{Find single change point}
\usage{
findSingleBreakPoint(Z, T, method = "sweep", plotme = TRUE, ...)
}
\arguments{
\item{Z}{complex vector of locations}

\item{T}{vector of times}

\item{method}{one of "sweep" or "optimize". See details.}

\item{plotme}{whether to plot the resulting likelihood (only if method is "sweep").}

\item{...}{additional parameters to pass to \code{\link{estimateUCVM}} function, in particular the method of estimation.  Under most conditions, fairly reliable and fast results are provided by the default \code{vLike} (velocity likelihood) method.}
}
\description{
Finds a single change point in UCVM parameters (time scale \eqn{tau} and rms speed \eqn{eta}) of a movement.
}
\details{
Two methods are provided: "sweep", which scans a set of possible change points, smooths the likelihoods and selects the maximum, or "optimize" which uses R's single dimension optimization algorithms to find the most likely change point. The latter is faster, but can be unreliable because the likelihood profiles are typically quite rough.
}
\examples{
require(smoove)
# Simulate a single change point process (see example in vignette)

ucvm1 <- simulateUCVM(T=cumsum(rexp(100)), nu=2, tau=1, method="exact")
ucvm2 <- simulateUCVM(T=cumsum(rexp(100)), nu=2, tau=10, v0 = ucvm1$V[100], method="exact")

T <- c(ucvm1$T, ucvm1$T[100] + ucvm2$T)
Z <- c(ucvm1$Z, ucvm1$Z[100] + ucvm2$Z)
plot_track(Z)

findSingleBreakPoint(Z,T, method = "sweep")
findSingleBreakPoint(Z,T, method = "optimize")
}
